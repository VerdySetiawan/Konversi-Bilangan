/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SistemMikroprosesor;

import javax.swing.JOptionPane;

/**
 *
 * @author hp
 */
public class KonversiBilangan extends javax.swing.JFrame {

    /**
     * Creates new form KonversiBilangan
     */
    public KonversiBilangan() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bilangan_from = new javax.swing.JComboBox();
        bilangan_to = new javax.swing.JComboBox();
        jenis_input = new javax.swing.JLabel();
        jenis_output = new javax.swing.JLabel();
        input_bilangan = new javax.swing.JTextField();
        output_bilangan = new javax.swing.JTextField();
        konversi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bilangan_from.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Biner", "Oktal", "Desimal", "Hexadesimal" }));
        bilangan_from.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bilangan_fromActionPerformed(evt);
            }
        });

        bilangan_to.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Biner", "Oktal", "Desimal", "Hexadesimal" }));
        bilangan_to.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bilangan_toActionPerformed(evt);
            }
        });

        jenis_input.setText("Input Biner");

        jenis_output.setText("Output Biner");

        konversi.setText("Konversi");
        konversi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                konversiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bilangan_from, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                        .addComponent(bilangan_to, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jenis_input)
                            .addComponent(jenis_output))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(input_bilangan)
                            .addComponent(output_bilangan, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(157, 157, 157)
                .addComponent(konversi)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bilangan_from, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bilangan_to, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(78, 78, 78)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jenis_input)
                    .addComponent(input_bilangan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jenis_output)
                    .addComponent(output_bilangan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(konversi)
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bilangan_fromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bilangan_fromActionPerformed
        if(bilangan_from.getSelectedItem()=="Hexadesimal"){
      jenis_input.setText("Input Hexadesimal:");
     }
      if(bilangan_from.getSelectedItem()=="Biner"){
      jenis_input.setText("Input Biner:");
     }
      if(bilangan_from.getSelectedItem()=="Oktal"){
      jenis_input.setText("Input Oktal:");
     }
       if(bilangan_from.getSelectedItem()=="Desimal"){
      jenis_input.setText("Input Desimal:");
     }// TODO add your handling code here:
    }//GEN-LAST:event_bilangan_fromActionPerformed

    private void bilangan_toActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bilangan_toActionPerformed
        if(bilangan_to.getSelectedItem()=="Hexadesimal"){
      jenis_output.setText("Output Hexadesimal:");
     }
      if(bilangan_to.getSelectedItem()=="Biner"){
      jenis_output.setText("Output Biner:");
     }
      if(bilangan_to.getSelectedItem()=="Oktal"){
      jenis_output.setText("Output Oktal:");
     }
      if(bilangan_to.getSelectedItem()=="Desimal"){
      jenis_output.setText("Output Desimal:");
     }// TODO add your handling code here:
    }//GEN-LAST:event_bilangan_toActionPerformed

    private void konversiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_konversiActionPerformed
        try{
         //Konversi Bilangan Hexadesimal
      if(bilangan_from.getSelectedItem()=="Hexadesimal"){
          //Mengkonversi Hexadesimal ke Desimal
        if(bilangan_to.getSelectedItem()=="Desimal"){
            String hexa = input_bilangan.getText();
            int outDes = Integer.parseInt(hexa,16);
            output_bilangan.setText(Integer.toUnsignedString(outDes));
        }
        //Mengkonversi Hexadesimal ke Biner
        else if(bilangan_to.getSelectedItem()=="Biner"){
             String hexa2 = input_bilangan.getText();
            int outDes2 = Integer.parseInt(hexa2,16);
             String hasilDes = Integer.toUnsignedString(outDes2);
              int hasilBiner = Integer.parseInt(hasilDes);
             output_bilangan.setText(Integer.toBinaryString(hasilBiner));
         }
        //Mengkonversi Hexadesimal ke Oktal
        else if(bilangan_to.getSelectedItem()=="Oktal"){
            String hexa3 = input_bilangan.getText();
             int outDes3 = Integer.parseInt(hexa3,16);
            String hasilDes2 = Integer.toUnsignedString(outDes3);
            int hasilOktal2 = Integer.parseInt(hasilDes2);
            output_bilangan.setText(Integer.toOctalString(hasilOktal2));
         }
     }
      
        //Konversi Bilangan Oktal
      else if(bilangan_from.getSelectedItem()=="Oktal"){
          //Mengkonversi Oktal ke Desimal
        if(bilangan_to.getSelectedItem()=="Desimal"){
            String oktal = input_bilangan.getText();
             int outDes3 = Integer.parseInt(oktal,8);
             output_bilangan.setText(Integer.toUnsignedString(outDes3));
         }
        //Mengkonversi Oktal ke Biner
        else if(bilangan_to.getSelectedItem()=="Biner"){
             String oktal2 = input_bilangan.getText();
             int outDes4 = Integer.parseInt(oktal2,8);
             String hasilDes2 = Integer.toUnsignedString(outDes4);
             int hasilBiner2 = Integer.parseInt(hasilDes2);
             output_bilangan.setText(Integer.toBinaryString(hasilBiner2));
          }
        //Mengkonversi Oktal ke Hexadesimal
        else if(bilangan_to.getSelectedItem()=="Hexadesimal"){
             String hexa3 = input_bilangan.getText();
             int outDes5 = Integer.parseInt(hexa3,8);
             String hasilDes3 = Integer.toUnsignedString(outDes5);
              int hasilHexa3 = Integer.parseInt(hasilDes3);
              output_bilangan.setText(Integer.toHexString(hasilHexa3));
         }
     }
      
      //Konversi Bilangan Biner
      else if(bilangan_from.getSelectedItem()=="Biner"){
          //Mengkonversi Biner ke Desimal
        if(bilangan_to.getSelectedItem()=="Desimal"){
             String biner4 = input_bilangan.getText();
             int outDes6 = Integer.parseInt(biner4,2);
             output_bilangan.setText(Integer.toUnsignedString(outDes6));
        }
        //Mengkonversi Biner ke Oktal
        else if(bilangan_to.getSelectedItem()=="Oktal"){
             String biner7 = input_bilangan.getText();
             int outDes7 = Integer.parseInt(biner7,2);
             String hasilBiner7 = Integer.toUnsignedString(outDes7);
             int hasilOktal7 = Integer.parseInt(hasilBiner7);
             output_bilangan.setText(Integer.toOctalString(hasilOktal7));
         }
        //Mengkonversi Biner ke Hexadesimal
        else if(bilangan_to.getSelectedItem()=="Hexadesimal"){
             String biner8 = input_bilangan.getText();
             int outDes8 = Integer.parseInt(biner8,2);
             String hasilBiner8 = Integer.toUnsignedString(outDes8);
             int hasilHexa8 = Integer.parseInt(hasilBiner8);
             output_bilangan.setText(Integer.toHexString(hasilHexa8));
         }
     }
      
      //Konversi Bilangan Desimal
      else if(bilangan_from.getSelectedItem()=="Desimal"){
          //Mengkonversi Desimal ke Oktal
           if(bilangan_to.getSelectedItem()=="Oktal"){
             String desimal1 = input_bilangan.getText();
             int outOktal9 = Integer.parseInt(desimal1);
             output_bilangan.setText(Integer.toOctalString(outOktal9));
            }
            //Mengkonversi Desimal ke Biner
           else if(bilangan_to.getSelectedItem()=="Biner"){
             String desimal2 = input_bilangan.getText();
             int outBiner9 = Integer.parseInt(desimal2);
             output_bilangan.setText(Integer.toBinaryString(outBiner9));
            }
            //Mengkonversi Desimal ke Hexadesimal
           else if(bilangan_to.getSelectedItem()=="Hexadesimal"){
            String desimal3 = input_bilangan.getText();
            int outHexa9 = Integer.parseInt(desimal3);
             output_bilangan.setText(Integer.toHexString(outHexa9));
            }
     }
      
     }catch(NumberFormatException ex){
      JOptionPane.showMessageDialog(null,"Input Tidak Benar");
     }// TODO add your handling code here:
    }//GEN-LAST:event_konversiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KonversiBilangan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KonversiBilangan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KonversiBilangan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KonversiBilangan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KonversiBilangan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox bilangan_from;
    private javax.swing.JComboBox bilangan_to;
    private javax.swing.JTextField input_bilangan;
    private javax.swing.JLabel jenis_input;
    private javax.swing.JLabel jenis_output;
    private javax.swing.JButton konversi;
    private javax.swing.JTextField output_bilangan;
    // End of variables declaration//GEN-END:variables
}
